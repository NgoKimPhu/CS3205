<project name="cs3205" default="source" xmlns:jacoco="antlib:org.jacoco.ant">
	<property name="ant.build.javac.source" value="1.8"/>
	<property name="ant.build.javac.target" value="1.8"/>

	<property name='lib.dir' value='${basedir}/bin/lib' />

	<property name="build-classes" value="${basedir}/bin/classes" />
	<property name="build-docs" value="${basedir}/bin/docs" />
	<property name="build-temp" value="${basedir}/bin/tmp/build-tmp" />

	<property name="test-temp" value="${basedir}/test-files/tmp" />

	<property name="src-path" value="src/com" />

	<property name="lib-organized-dir" value="lib-organized" />

	<property name="build-libOnly" value="${basedir}/bin/build/cs3205-libsOnly.jar" />

	<!-- ant contrib add ons -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${basedir}/build-tools/ant-contrib/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<path id="lib.path.ref">
		<!--<fileset dir="bin/build" includes="*-libsOnly.jar" />-->
		<fileset dir="bin/libs" includes="*.jar" />
	</path>

	<!-- **************************************************
	* Setup / Cleanup Functions
	************************************************** -->

	<!-- clean and remove all build files / test temp files -->
	<target name="clean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${basedir}/bin" includes="**/*"/>
			<fileset dir="${basedir}/html-docs" includes="**/*"/>
			<fileset dir="${basedir}/test-files/tmp" includes="**/*"/>
		</delete>

		<mkdir dir="${basedir}/bin"/>
		<mkdir dir="${basedir}/bin/build"/>
		<mkdir dir="${basedir}/bin/docs"/>
		<mkdir dir="${basedir}/bin/classes"/>
		<mkdir dir="${basedir}/bin/tmp"/>
		<mkdir dir="${basedir}/bin/tmp/build-tmp"/>
		<mkdir dir="${basedir}/bin/tmp/build-tmp/UBER"/>
		<mkdir dir="${basedir}/test-files/tmp"/>
	</target>

	<!-- **************************************************
	* Source code complation
	************************************************** -->

	<!-- compile the source -->
	<target name="compile-src">
		<mkdir dir="${build-classes}"/>
		<javac destdir="${build-classes}" classpathref="lib.path.ref" debug="true" debuglevel="lines,source"
				 includeantruntime="false">
			<!-- bootclasspath="./build-tools/rt-stubs/java-rt-jar-stubs-1.5.0.jar" -->
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
 			<compilerarg value="-Xlint:-path"/>
			<src path="${src-path}"/>
			<exclude name="**/package-info.java"/>
		</javac>
		<copy todir="${build-classes}/com">
			<fileset dir="${src-path}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<!-- convinent aliases -->
	<target name="compile" depends="compile-src">
	</target>
	<target name="source" depends="compile-src">
	</target>

	<!-- **************************************************
	* Complete build / docs / hybut
	************************************************** -->

	<!-- Build all the respective realese jar files -->
	<target name="build" depends="compile-src">
		<!-- no libs -->
		<!-- <delete dir="bin/build/cs3205-noLibs.jar" failonerror="false"/>
		<jar destfile="bin/build/cs3205-noLibs.jar">
			<fileset dir="${build-classes}" includes="**/*.class,**/*.js" excludes="**/*_test.class"/>
		</jar> -->

		<!-- with dependency files -->
		<delete dir="bin/build/cs3205-withLibs.jar" failonerror="false"/>
		<jar destfile="bin/build/cs3205-withLibs.jar">
			<fileset dir="${build-classes}" includes="**/*.class,**/*.js" excludes="**/*_test.class"/>
		</jar>
	</target>

	<!-- Build all the respective realese jar files, without cleaning out existing files -->
	<target name="build-src" depends="compile-src">
		<!-- no libs -->
		<delete dir="bin/build/cs3205-noLibs.jar" failonerror="false"/>
		<jar destfile="bin/build/cs3205-noLibs.jar">
			<fileset dir="${build-classes}" includes="**/*.class,**/*.js" excludes="**/*_test.class"/>
		</jar>
	</target>

	<target name="b">
		<antcall target="build-src"></antcall>
	</target>

</project>
